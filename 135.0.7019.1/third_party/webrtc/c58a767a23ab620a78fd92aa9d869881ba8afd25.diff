diff --git a/modules/desktop_capture/win/dxgi_output_duplicator.cc b/modules/desktop_capture/win/dxgi_output_duplicator.cc
index 7014b10396..0af6731af0 100644
--- a/modules/desktop_capture/win/dxgi_output_duplicator.cc
+++ b/modules/desktop_capture/win/dxgi_output_duplicator.cc
@@ -74,9 +74,41 @@ DxgiOutputDuplicator::DxgiOutputDuplicator(const D3dDevice& device,
   RTC_DCHECK_GT(desktop_rect_.width(), 0);
   RTC_DCHECK_GT(desktop_rect_.height(), 0);
   DEVICE_SCALE_FACTOR device_scale_factor = DEVICE_SCALE_FACTOR_INVALID;
-  HRESULT hr = GetScaleFactorForMonitor(desc.Monitor, &device_scale_factor);
-  RTC_LOG_IF(LS_ERROR, FAILED(hr))
-      << "Failed to get scale factor for monitor: " << hr;
+#define GETPERCENT(dpi) ((dpi * 100 + 50) / 96)
+typedef HRESULT (* LPFNDLLFUNC1)(HMONITOR,DEVICE_SCALE_FACTOR *);
+HINSTANCE hDLL;               // Handle to DLL
+LPFNDLLFUNC1 lpfnDllFunc1;    // Function pointer
+hDLL = LoadLibrary(TEXT("Shcore.dll"));
+if (hDLL != NULL)
+{
+   lpfnDllFunc1 = (LPFNDLLFUNC1)GetProcAddress(hDLL,
+                                           "GetScaleFactorForMonitor");
+   if (!lpfnDllFunc1)
+   {
+      // handle the error
+      FreeLibrary(hDLL);
+        //---- set screen dpi (per session) ----
+        HDC hdc = GetWindowDC(NULL);
+        if (! hdc)
+        {
+           RTC_LOG(LS_ERROR)
+              << "Failed to get scale factor for monitor: ";
+        }
+        else
+        {
+            int iDpi = GetDeviceCaps(hdc, LOGPIXELSX);
+            ReleaseDC(NULL, hdc);
+            device_scale_factor = (DEVICE_SCALE_FACTOR) GETPERCENT(iDpi);
+        }
+   }
+   else
+   {
+      // call the function
+      HRESULT hr = lpfnDllFunc1(desc.Monitor, &device_scale_factor);
+      RTC_LOG_IF(LS_ERROR, FAILED(hr))
+          << "Failed to get scale factor for monitor: " << hr;
+   }
+}
   if (device_scale_factor != DEVICE_SCALE_FACTOR_INVALID) {
     device_scale_factor_ = static_cast<float>(device_scale_factor) / 100.0f;
   }
diff --git a/modules/desktop_capture/win/wgc_capture_session.cc b/modules/desktop_capture/win/wgc_capture_session.cc
index 339a744de0..e4460aa2fe 100644
--- a/modules/desktop_capture/win/wgc_capture_session.cc
+++ b/modules/desktop_capture/win/wgc_capture_session.cc
@@ -114,9 +114,41 @@ WgcCaptureSession::WgcCaptureSession(intptr_t source_id,
                                 /*dwFlags=*/MONITOR_DEFAULTTONEAREST);
   }
   DEVICE_SCALE_FACTOR device_scale_factor = DEVICE_SCALE_FACTOR_INVALID;
-  HRESULT hr = GetScaleFactorForMonitor(monitor, &device_scale_factor);
-  RTC_LOG_IF(LS_ERROR, FAILED(hr))
-      << "Failed to get scale factor for monitor: " << hr;
+#define GETPERCENT(dpi) ((dpi * 100 + 50) / 96)
+typedef HRESULT (* LPFNDLLFUNC1)(HMONITOR,DEVICE_SCALE_FACTOR *);
+HINSTANCE hDLL;               // Handle to DLL
+LPFNDLLFUNC1 lpfnDllFunc1;    // Function pointer
+hDLL = LoadLibrary(TEXT("Shcore.dll"));
+if (hDLL != NULL)
+{
+   lpfnDllFunc1 = (LPFNDLLFUNC1)GetProcAddress(hDLL,
+                                           "GetScaleFactorForMonitor");
+   if (!lpfnDllFunc1)
+   {
+      // handle the error
+      FreeLibrary(hDLL);
+        //---- set screen dpi (per session) ----
+        HDC hdc = GetWindowDC(NULL);
+        if (! hdc)
+        {
+           RTC_LOG(LS_ERROR)
+              << "Failed to get scale factor for monitor: ";
+        }
+        else
+        {
+            int iDpi = GetDeviceCaps(hdc, LOGPIXELSX);
+            ReleaseDC(NULL, hdc);
+            device_scale_factor = (DEVICE_SCALE_FACTOR) GETPERCENT(iDpi);
+        }
+   }
+   else
+   {
+      // call the function
+      HRESULT hr = lpfnDllFunc1(monitor, &device_scale_factor);
+      RTC_LOG_IF(LS_ERROR, FAILED(hr))
+          << "Failed to get scale factor for monitor: " << hr;
+   }
+}
 
   if (device_scale_factor != DEVICE_SCALE_FACTOR_INVALID) {
     device_scale_factor_ = static_cast<float>(device_scale_factor) / 100.0f;
