diff --git a/ppapi/proxy/ppapi_param_traits.cc b/ppapi/proxy/ppapi_param_traits.cc
index f7c066952b22d..cdd45ebd54ce6 100644
--- a/ppapi/proxy/ppapi_param_traits.cc
+++ b/ppapi/proxy/ppapi_param_traits.cc
@@ -321,6 +321,61 @@ void ParamTraits<ppapi::proxy::PPBURLLoader_UpdateProgress_Params>::Log(
 }
 
 #if !BUILDFLAG(IS_NACL)
+// PPBFlash_DrawGlyphs_Params --------------------------------------------------
+// static
+void ParamTraits<ppapi::proxy::PPBFlash_DrawGlyphs_Params>::Write(
+    base::Pickle* m,
+    const param_type& p) {
+  WriteParam(m, p.instance);
+  WriteParam(m, p.image_data);
+  WriteParam(m, p.font_desc);
+  WriteParam(m, p.color);
+  WriteParam(m, p.position);
+  WriteParam(m, p.clip);
+  WriteParam(m, p.transformation[0][0]);
+  WriteParam(m, p.transformation[0][1]);
+  WriteParam(m, p.transformation[0][2]);
+  WriteParam(m, p.transformation[1][0]);
+  WriteParam(m, p.transformation[1][1]);
+  WriteParam(m, p.transformation[1][2]);
+  WriteParam(m, p.transformation[2][0]);
+  WriteParam(m, p.transformation[2][1]);
+  WriteParam(m, p.transformation[2][2]);
+  WriteParam(m, p.allow_subpixel_aa);
+  WriteParam(m, p.glyph_indices);
+  WriteParam(m, p.glyph_advances);
+}
+
+// static
+bool ParamTraits<ppapi::proxy::PPBFlash_DrawGlyphs_Params>::Read(
+    const base::Pickle* m,
+    base::PickleIterator* iter,
+    param_type* r) {
+  return ReadParam(m, iter, &r->instance) &&
+         ReadParam(m, iter, &r->image_data) &&
+         ReadParam(m, iter, &r->font_desc) && ReadParam(m, iter, &r->color) &&
+         ReadParam(m, iter, &r->position) && ReadParam(m, iter, &r->clip) &&
+         ReadParam(m, iter, &r->transformation[0][0]) &&
+         ReadParam(m, iter, &r->transformation[0][1]) &&
+         ReadParam(m, iter, &r->transformation[0][2]) &&
+         ReadParam(m, iter, &r->transformation[1][0]) &&
+         ReadParam(m, iter, &r->transformation[1][1]) &&
+         ReadParam(m, iter, &r->transformation[1][2]) &&
+         ReadParam(m, iter, &r->transformation[2][0]) &&
+         ReadParam(m, iter, &r->transformation[2][1]) &&
+         ReadParam(m, iter, &r->transformation[2][2]) &&
+         ReadParam(m, iter, &r->allow_subpixel_aa) &&
+         ReadParam(m, iter, &r->glyph_indices) &&
+         ReadParam(m, iter, &r->glyph_advances) &&
+         r->glyph_indices.size() == r->glyph_advances.size();
+}
+
+// static
+void ParamTraits<ppapi::proxy::PPBFlash_DrawGlyphs_Params>::Log(
+    const param_type& p,
+    std::string* l) {
+}
+
 // SerializedDirEntry ----------------------------------------------------------
 
 // static
diff --git a/ppapi/proxy/ppapi_param_traits.h b/ppapi/proxy/ppapi_param_traits.h
index 006ec54539d35..de638ec924754 100644
--- a/ppapi/proxy/ppapi_param_traits.h
+++ b/ppapi/proxy/ppapi_param_traits.h
@@ -30,6 +30,7 @@ class PPB_X509Certificate_Fields;
 
 namespace proxy {
 
+struct PPBFlash_DrawGlyphs_Params;
 struct PPBURLLoader_UpdateProgress_Params;
 struct SerializedDirEntry;
 struct SerializedFontDescription;
@@ -61,6 +62,17 @@ struct PPAPI_PROXY_EXPORT ParamTraits<PP_NetAddress_Private> {
   static void Log(const param_type& p, std::string* l);
 };
 
+template<>
+struct PPAPI_PROXY_EXPORT ParamTraits<
+    ppapi::proxy::PPBFlash_DrawGlyphs_Params> {
+  typedef ppapi::proxy::PPBFlash_DrawGlyphs_Params param_type;
+  static void Write(base::Pickle* m, const param_type& p);
+  static bool Read(const base::Pickle* m,
+                   base::PickleIterator* iter,
+                   param_type* r);
+  static void Log(const param_type& p, std::string* l);
+};
+
 template<>
 struct PPAPI_PROXY_EXPORT ParamTraits<
     ppapi::proxy::PPBURLLoader_UpdateProgress_Params> {
diff --git a/ppapi/proxy/serialized_structs.cc b/ppapi/proxy/serialized_structs.cc
index f7ffeb4f4b70f..3846ec5a8e49f 100644
--- a/ppapi/proxy/serialized_structs.cc
+++ b/ppapi/proxy/serialized_structs.cc
@@ -61,5 +61,20 @@ SerializedNetworkInfo::SerializedNetworkInfo()
 
 SerializedNetworkInfo::~SerializedNetworkInfo() {}
 
+PPBFlash_DrawGlyphs_Params::PPBFlash_DrawGlyphs_Params()
+    : instance(0),
+      font_desc(),
+      color(0) {
+  clip.point.x = 0;
+  clip.point.y = 0;
+  clip.size.height = 0;
+  clip.size.width = 0;
+  position.x = 0;
+  position.y = 0;
+  allow_subpixel_aa = PP_FALSE;
+}
+
+PPBFlash_DrawGlyphs_Params::~PPBFlash_DrawGlyphs_Params() {}
+
 }  // namespace proxy
 }  // namespace ppapi
diff --git a/ppapi/proxy/serialized_structs.h b/ppapi/proxy/serialized_structs.h
index c3dd3c2dbab18..76e4fa5416ccb 100644
--- a/ppapi/proxy/serialized_structs.h
+++ b/ppapi/proxy/serialized_structs.h
@@ -66,6 +66,22 @@ struct SerializedDirEntry {
   bool is_dir;
 };
 
+struct PPAPI_PROXY_EXPORT PPBFlash_DrawGlyphs_Params {
+  PPBFlash_DrawGlyphs_Params();
+  ~PPBFlash_DrawGlyphs_Params();
+
+  PP_Instance instance;
+  ppapi::HostResource image_data;
+  SerializedFontDescription font_desc;
+  uint32_t color;
+  PP_Point position;
+  PP_Rect clip;
+  float transformation[3][3];
+  PP_Bool allow_subpixel_aa;
+  std::vector<uint16_t> glyph_indices;
+  std::vector<PP_Point> glyph_advances;
+};
+
 struct PPBURLLoader_UpdateProgress_Params {
   PP_Instance instance;
   ppapi::HostResource resource;
diff --git a/tools/ipc_fuzzer/fuzzer/fuzzer.cc b/tools/ipc_fuzzer/fuzzer/fuzzer.cc
index 758e694213454..28def0a0b64ba 100644
--- a/tools/ipc_fuzzer/fuzzer/fuzzer.cc
+++ b/tools/ipc_fuzzer/fuzzer/fuzzer.cc
@@ -1395,6 +1395,15 @@ struct FuzzTraits<ppapi::PPB_X509Certificate_Fields> {
   }
 };
 
+template <>
+struct FuzzTraits<ppapi::proxy::PPBFlash_DrawGlyphs_Params> {
+  static bool Fuzz(ppapi::proxy::PPBFlash_DrawGlyphs_Params* p,
+                       Fuzzer* fuzzer) {
+    // TODO(mbarbella): This should actually do something.
+    return true;
+  }
+};
+
 template <>
 struct FuzzTraits<ppapi::proxy::ResourceMessageCallParams> {
   static bool Fuzz(
